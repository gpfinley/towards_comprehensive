package acronym;

import model.Token;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.util.List;
import java.util.zip.GZIPInputStream;

/**
 * Describes any generic acronym detection and normalization model
 * The essential capabilities of the model are
 *      1) to determine if something is an acronym, and
 *      2) to expand a given acronym Token given its context Tokens
 * Models are generally serializable as well so they can be trained ahead of time
 *
 * Created by ANONYMOUS on 10/30/15.
 */
public interface AcronymModel {

    boolean hasAcronym(Token token);

    String findBestSense(List<Token> allTokens, Token token);

    /**
     * Gets a standardized form of a token, derived from Token.normalForm
     * @param t
     * @return
     */
    static String standardForm(Token t) {
        return standardFormString(t.getText());
    }

    /**
     * Get a standardized form for the dictionary
     * Replace non-single-digit numerals (including decimals/commas) with a generic string
     * Collapse certain non-alphanumeric characters ('conjunction' symbols like /, &, +)
     * @param s
     * @return
     */
    static String standardFormString(String s) {
        // Collapse numbers
        if(s.matches("[0-9]")) return "single_digit";
        if(s.matches("[0-9]*\\.[0-9]+")) return "decimal_number";
        if(s.matches("[0-9][0-9,]+")) return "big_number";
        // Collapse certain symbols
        s = s.replace('&','/');
        s = s.replace('+','/');
        return s;
    }

    /**
     * Loads the model from a serialized object file
     * File should have been generated by AcronymVectorModelTrainer
     * @param filename
     * @return
     * @throws IOException
     * @throws ClassNotFoundException
     */
    static AcronymModel loadFromSerialized(String filename) throws IOException, ClassNotFoundException {
        InputStream inputStream = new FileInputStream(filename);
        GZIPInputStream gzipInputStream = new GZIPInputStream(inputStream);
        ObjectInputStream ois = new ObjectInputStream(gzipInputStream);
        return (AcronymModel) ois.readObject();
    }

    void serialize(String filename) throws IOException;

}
